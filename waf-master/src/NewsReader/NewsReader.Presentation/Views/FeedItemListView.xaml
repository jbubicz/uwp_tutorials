<UserControl
    x:Class="Jbe.NewsReader.Presentation.Views.FeedItemListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:waf="using:System.Waf.Presentation.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ctrl="using:Jbe.NewsReader.Presentation.Controls"
    xmlns:v="using:Jbe.NewsReader.Presentation.Views"
    xmlns:dd="using:Jbe.NewsReader.Presentation.DesignData"
    xmlns:m="using:Jbe.NewsReader.Domain"
    mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400"
    d:DataContext="{d:DesignInstance dd:SampleFeedItemListViewModel, IsDesignTimeCreatable=True}"
    KeyDown="OnKeyDown" SizeChanged="SizeChangedHandler">

    <UserControl.Resources>
        <CollectionViewSource x:Name="ItemsListViewSource" IsSourceGrouped="True" Source="{x:Bind ViewModel.ItemsListView, Mode=OneWay}" />
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                <waf:HeaderContentControl Margin="13,0,0,0">
                    <TextBlock Text="{x:Bind ViewModel.SelectionService.SelectedFeed.Name, Mode=OneWay, FallbackValue=''}" MaxLines="1" Style="{StaticResource TitleTextBlockStyle}"/>
                </waf:HeaderContentControl>
            </Border>

            <CommandBar x:Name="topBar" Grid.Column="1" ctrl:ToolBarHelper.DynamicToolBar="TopBar" ctrl:ToolBarHelper.AssociatedToolBar="{x:Bind bottomBar}">
                <AppBarButton x:Uid="RefreshL" Command="{x:Bind ViewModel.RefreshCommand}" Icon="Refresh"/>
                <AppBarButton x:Uid="MarkAsReadUnreadL" Command="{x:Bind ViewModel.ReadUnreadCommand}" Icon="Flag"/>
                <AppBarButton x:Name="selectItemsButton" x:Uid="SelectItemsL">
                    <AppBarButton.Icon>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE762;" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton x:Name="cancelSelectionButton" x:Uid="CancelL" Icon="Cancel" Visibility="Collapsed"/>
            </CommandBar>

            <Grid Grid.Column="2" Background="{ThemeResource SystemControlBackgroundChromeMediumBrush}">
                <!-- Workaround for searchButton: Set Height and remove Label so that it does not expand when width is reduzed to minimum; IsCompact seems to be ignored -->
                <AppBarButton x:Name="searchButton" Icon="Find" IsCompact="True" Click="SearchButtonClick" Height="48"/>
                <AutoSuggestBox x:Name="searchBox" x:Uid="SearchP" Text="{x:Bind ViewModel.SearchText, Mode=TwoWay}" Width="250" QueryIcon="Find" VerticalAlignment="Center" Margin="7,0" Visibility="Collapsed"
                                LostFocus="SearchBoxLostFocus"/>
            </Grid>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.Transitions>
                <TransitionCollection>
                    <EntranceThemeTransition/>
                </TransitionCollection>
            </Grid.Transitions>

            <Grid Visibility="{x:Bind ViewModel.SelectionService.SelectedFeed, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0" Visibility="{x:Bind ViewModel.SelectionService.SelectedFeed.LoadError, Mode=OneWay, Converter={StaticResource NullToVisibilityConverter}}" 
                            Background="{ThemeResource ErrorBackgroundThemeBrush}">
                    <TextBlock x:Uid="LoadErrorT" Margin="13,10,20,0" FontWeight="SemiBold" Style="{StaticResource SubtitleTextBlockStyle}"/>
                    <TextBlock Text="{x:Bind ViewModel.SelectionService.SelectedFeed.LoadError, Mode=OneWay}" Margin="13,7,20,13" TextWrapping="Wrap" MaxLines="5"
                               Style="{ThemeResource BodyTextBlockStyle}"/>
                </StackPanel>

                <ListView x:Name="feedItemListView" Grid.Row="1" ItemsSource="{x:Bind ItemsListViewSource.View, Mode=OneWay}"
                    SelectedItem="{x:Bind ViewModel.SelectionService.SelectedFeedItem, Mode=TwoWay}" ItemClick="FeedItemListViewItemClick"
                    SelectionChanged="FeedItemListViewSelectionChanged">
                    <ListView.Resources>
                        <Style TargetType="ListViewHeaderItem">
                            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                            <Setter Property="FontSize" Value="{ThemeResource ListViewHeaderItemThemeFontSize}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="Padding" Value="12,8,12,8"/>
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="VerticalContentAlignment" Value="Top" />
                            <Setter Property="MinHeight" Value="0"/>
                            <Setter Property="UseSystemFocusVisuals" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewHeaderItem">
                                        <StackPanel Background="{ThemeResource JbeHeaderBackgroundBrush}"
                                            BorderBrush="{ThemeResource JbeMainBorderBrush}"
                                            BorderThickness="0,0,0,1.5">
                                            <ContentPresenter x:Name="ContentPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </StackPanel>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Key, Converter={StaticResource StringFormatConverter}, ConverterParameter='{}{0:D}'}" Style="{StaticResource BodyTextBlockStyle}"
                                               Margin="9,0,0,0"/>
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="m:FeedItem">
                            <Grid DoubleTapped="FeedDoubleTapped" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="9"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="1.5"/>
                                </Grid.RowDefinitions>

                                <Grid.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem x:Uid="OpenT" Command="{Binding DataContext.ShowFeedItemViewCommand, ElementName=feedItemListView, Mode=OneTime}" CommandParameter="{x:Bind}"
                                                        FontWeight="SemiBold"/>
                                        <MenuFlyoutItem x:Uid="MarkAsReadUnreadT" Command="{Binding DataContext.ReadUnreadCommand, ElementName=feedItemListView, Mode=OneTime}" CommandParameter="{x:Bind}"/>
                                    </MenuFlyout>
                                </Grid.ContextFlyout>

                                <Rectangle Grid.Column="0" Grid.Row="0" Fill="{ThemeResource JbeUnreadLineFillThemeBrush}"
                                        Visibility="{x:Bind MarkAsRead, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=Invert}"/>

                                <RelativePanel Grid.Column="2" Grid.Row="0" Margin="7,5,7,8">
                                    <TextBlock x:Name="nameBox" Text="{x:Bind Name}" FontWeight="{x:Bind v:FeedItemListView.GetFontWeight(MarkAsRead), Mode=OneWay}" Margin="0,0,11,0" 
                                            Style="{ThemeResource SubtitleTextBlockStyle}" MaxLines="2"/>

                                    <TextBlock x:Name="descriptionBox" Text="{x:Bind Description}" MaxLines="3" Style="{ThemeResource BodyTextBlockStyle}"
                                            RelativePanel.Below="nameBox" Margin="0,5,0,3"/>
                                </RelativePanel>

                                <Button Grid.Column="3" Grid.Row="0" Command="{Binding DataContext.ShowFeedItemViewCommand, ElementName=feedItemListView, Mode=OneTime}" CommandParameter="{x:Bind}"
                                        Content="&#xE76C;" Padding="8" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" FontFamily="Segoe MDL2 Assets"
                                        Foreground="{ThemeResource JbeLightForegroundBrush}"/>

                                <Rectangle Grid.ColumnSpan="4" Grid.Row="1" Fill="{ThemeResource JbeMainBorderBrush}"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>

            <ProgressBar IsIndeterminate="True" VerticalAlignment="Top" Visibility="{x:Bind ViewModel.SelectionService.SelectedFeed.IsLoading, Mode=OneWay}"/>
        </Grid>

        <Border Grid.Row="2" Padding="0,1,0,0" Background="{ThemeResource JbeAppBarBorderBrush}" Visibility="{x:Bind bottomBar.Visibility, Mode=OneWay}">
            <CommandBar x:Name="bottomBar" ctrl:ToolBarHelper.DynamicToolBar="BottomBar" ctrl:ToolBarHelper.AssociatedToolBar="{x:Bind topBar}" />
        </Border>
    </Grid>
</UserControl>
